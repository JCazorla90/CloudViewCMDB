name: Build and Package CloudView CMDB

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install and build backend
        working-directory: ./backend
        run: |
          npm install
          npm run build || echo "No build script in backend"

      - name: Install and build frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Create Dockerfiles if missing
        run: |
          echo "FROM node:18-alpine\nWORKDIR /app\nCOPY . .\nRUN npm install && npm run build\nCMD [\"node\", \"server.js\"]" > ./backend/Dockerfile
          echo "FROM node:18-alpine\nWORKDIR /app\nCOPY . .\nRUN npm install && npm run build\nRUN npm install -g serve\nCMD [\"serve\", \"-s\", \"dist\"]" > ./frontend/Dockerfile

      - name: Build Docker images
        run: |
          docker build -t cmdb-backend ./backend
          docker build -t cmdb-frontend ./frontend

      - name: Save backend Docker image
        run: docker save cmdb-backend -o backend.tar

      - name: Save frontend Docker image
        run: docker save cmdb-frontend -o frontend.tar

      - name: Upload backend image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: cmdb-backend-image
          path: backend.tar

      - name: Upload frontend image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: cmdb-frontend-image
          path: frontend.tar